{"version":3,"sources":["components/repositories/RepositoryListItem.js","components/Paginator.js","api/get.js","api/index.js","redux/modules/branches.js","redux/modules/ui.js","redux/modules/repositories.js","components/repositories/RankBy.js","redux/modules/selectors.js","components/repositories/Languages.js","components/repositories/RepositoryList.js","components/layout/Header.js","components/layout/Footer.js","components/layout/Content.js","components/repositories/Search.js","components/repositories/Organization.js","components/LoadingSpinner.js","components/repositories/index.js","components/branches/Branch.js","components/branches/BranchListItem.js","components/branches/BranchList.js","components/branches/index.js","serviceWorker.js","redux/modules/index.js","redux/store.js","index.js","App.js"],"names":["genRepositoryURL","repository","concat","owner","login","name","StarGazers","_ref","count","react_default","a","createElement","className","icon","type","theme","Forks","_ref2","RepositoryTitle","_ref3","Fragment","avatar","shape","src","avatar_url","react_router_dom","to","RepositoryListItem_StarGazers","stargazers_count","RepositoryListItem_Forks","forks_count","LanguageAttr","_ref4","language","url","href","target","GitURLAttr","_ref5","UpdatedAttr","_ref6","date","DescriptionAttr","_ref7","description","RepositoryListItem","_ref8","card","title","RepositoryListItem_RepositoryTitle","RepositoryListItem_DescriptionAttr","RepositoryListItem_LanguageAttr","languages_url","RepositoryListItem_GitURLAttr","git_url","RepositoryListItem_UpdatedAttr","updated_at","Paginator","page","limit","onChange","pagination","total","pageSize","current","handleSuccess","response","data","handleError","err","status","message","get","path","axios","then","getRepositories","organization","catch","queryStatus","Error","getBranches","LOAD_BRANCHES","SET_BRANCHES","initialState","branches","SET_ERROR","CLEAR_ERROR","setError","error","loading","LOAD_REPOSITORIES","SET_REPOSITORIES","SET_REPOSITORIES_PAGE","SET_REPOSITORIES_RANKING","SET_REPOSITORIES_LANGUAGE","CLEAR_ORGANIZATION","repositories","rankBy","RankBy","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","handleMenuClick","e","props","setRepositoriesRanking","key","renderMenu","menu","onClick","Item","render","dropdown","Button","overlay","inherits","Component","mapDispatchToProps","connect","getRepositoryPaginationSelector","createSelector","state","list","offset","sort","repo1","repo2","processedList","filter","items","slice","getRepositoryLanguagesSelector","toConsumableArray","Set","map","Boolean","Languages","setRepositoriesLanguage","languages","setRepositoriesPage","empty","pageInfo","Paginator_Paginator","repositories_RankBy","repositories_Languages","RepositoryListItem_RepositoryListItem","assign","id","Header","children","layout","Footer","Content","fetchRepositories","dispatch","loadRepositories","setRepositories","input","Search","placeholder","enterButton","onSearch","ui","spin","size","spinning","Repositories","layout_Header","repositories_Search","components_LoadingSpinner","repositories_Organization","repositories_RepositoryList","Branch","BranchListItem","branch","commit","sha","BranchList","BranchListItem_BranchListItem","GoBack","breadcrumb","Branches","createClass","value","match","params","fetchBranches","branches_GoBack","Branch_Branch","BranchList_BranchList","loadBranches","setBranches","_ref2$branches","window","location","hostname","combineReducers","undefined","action","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","es","react_router","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c40c2279.chunk.js","sourcesContent":["/* eslint-disable react/jsx-no-target-blank */\nimport React from \"react\";\nimport { Card, Icon, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nconst genRepositoryURL = repository =>\n  `/${repository.owner.login}/${repository.name}`;\n\nconst StarGazers = ({ count }) => (\n  <div className=\"app-github-stargazers\">\n    <Icon type=\"star\" theme=\"filled\" />\n    <span>{count}</span>\n  </div>\n);\n\nconst Forks = ({ count }) => (\n  <div className=\"app-github-forks\">\n    <Icon type=\"fork\" />\n    <span>{count}</span>\n  </div>\n);\n\nconst RepositoryTitle = ({ repository }) => (\n  <>\n    <Avatar shape=\"square\" src={repository.owner.avatar_url} />\n    <h3 className=\"app-github-rep-li-name\">\n      <Link to={genRepositoryURL(repository)}>{repository.name}</Link>\n    </h3>\n    <StarGazers count={repository.stargazers_count} />\n    <Forks count={repository.forks_count} />\n  </>\n);\n\nconst LanguageAttr = ({ language, url }) => (\n  <li>\n    <dt>Language</dt>\n    <dd>\n      <a href={url} target=\"_blank\">\n        {language}\n      </a>\n    </dd>\n  </li>\n);\n\nconst GitURLAttr = ({ url }) => (\n  <li>\n    <dt>Git</dt>\n    <dd>\n      <a href={url} target=\"_blank\">\n        URL\n      </a>\n    </dd>\n  </li>\n);\n\nconst UpdatedAttr = ({ date }) => (\n  <li>\n    <dt>Updated on</dt>\n    <dd>{date}</dd>\n  </li>\n);\n\nconst DescriptionAttr = ({ description }) => (\n  <div className=\"app-github-rep-li-description\">{description}</div>\n);\n\nexport const RepositoryListItem = ({ repository }) => (\n  <Card\n    title={<RepositoryTitle {...{ repository }} />}\n    className=\"app-github-list-item app-github-repository-listitem\"\n  >\n    <DescriptionAttr description={repository.description} />\n    <ul className=\"app-github-details-list\">\n      <LanguageAttr\n        language={repository.language}\n        url={repository.languages_url}\n      />\n      <GitURLAttr url={repository.git_url} />\n      <UpdatedAttr date={repository.updated_at} />\n    </ul>\n  </Card>\n);\n","import React from \"react\";\nimport { Pagination } from \"antd\";\n\nexport const Paginator = ({ page, count, limit, onChange }) => (\n  <Pagination\n    className=\"app-github-reps-pagination\"\n    total={count}\n    pageSize={limit}\n    current={page}\n    onChange={onChange}\n  />\n);\n","import axios from \"axios\";\n\nconst host = \"https://api.github.com\";\n\nconst makeError = response => ({\n  status: response && response.status,\n  message: \"Bad server response\"\n});\n\nconst handleSuccess = response => response.data;\n\nconst handleError = err => {\n  throw makeError(err.response);\n};\n\nexport default path =>\n  axios.get(`${host}${path}`).then(handleSuccess, handleError);\n","import get from \"./get\";\n\nexport const getRepositories = organization =>\n  get(`/orgs/${organization}/repos`).catch(err => {\n    if (err.queryStatus === 404) {\n      throw new Error(`Organization not found`);\n    }\n    throw err;\n  });\n\nexport const getBranches = (organization, repository) =>\n  get(`/repos/${organization}/${repository}/branches`).catch(err => {\n    if (err.queryStatus === 404) {\n      throw new Error(`Branch not found`);\n    }\n    throw err;\n  });\n","import { getBranches } from \"./../../api/index\";\nimport { setError } from \"./ui\";\nexport const LOAD_BRANCHES = \"payworks/repositories/LOAD_BRANCHES\";\nexport const SET_BRANCHES = \"payworks/repositories/SET_BRANCHES\";\n\nexport function loadBranches(repository) {\n  return {\n    type: LOAD_BRANCHES,\n    repository\n  };\n}\n\nexport function setBranches(branches) {\n  return {\n    type: SET_BRANCHES,\n    branches\n  };\n}\n\nexport function fetchBranches(organization, repository) {\n  return dispatch => {\n    dispatch(loadBranches(repository));\n    return getBranches(organization, repository)\n      .then(branches => {\n        dispatch(setBranches(branches));\n      })\n      .catch(err => {\n        dispatch(setError(err.message));\n      });\n  };\n}\n\nconst initialState = {\n  repository: \"\",\n  branches: []\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_BRANCHES:\n      return Object.assign({}, state, {\n        repository: action.repository\n      });\n    case SET_BRANCHES:\n      return Object.assign({}, state, {\n        branches: action.branches\n      });\n    default:\n      return state;\n  }\n}\n","import { LOAD_BRANCHES, SET_BRANCHES } from \"./branches\";\nimport { LOAD_REPOSITORIES, SET_REPOSITORIES } from \"./repositories\";\nexport const SET_ERROR = \"payworks/ui/SET_ERROR\";\nexport const CLEAR_ERROR = \"payworks/ui/CLEAR_ERROR\";\n\nexport function setError(error) {\n  return {\n    type: SET_ERROR,\n    error\n  };\n}\n\nexport function clearError() {\n  return {\n    type: CLEAR_ERROR\n  };\n}\n\nconst initialState = {\n  error: \"\",\n  loading: false\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_REPOSITORIES:\n    case LOAD_BRANCHES:\n      return Object.assign({}, state, {\n        loading: true\n      });\n    case SET_REPOSITORIES:\n    case SET_BRANCHES:\n      return Object.assign({}, state, {\n        loading: false\n      });\n    case SET_ERROR:\n      return Object.assign({}, state, {\n        error: action.error,\n        loading: false\n      });\n    case CLEAR_ERROR:\n      return Object.assign({}, state, {\n        error: \"\"\n      });\n    default:\n      return state;\n  }\n}\n","import { getRepositories } from \"./../../api/index\";\nimport { setError } from \"./ui\";\n\nexport const LOAD_REPOSITORIES = \"payworks/repositories/LOAD_REPOSITORIES\";\nexport const SET_REPOSITORIES = \"payworks/repositories/SET_REPOSITORIES\";\nexport const SET_REPOSITORIES_PAGE =\n  \"payworks/repositories/SET_REPOSITORIES_PAGE\";\nexport const SET_REPOSITORIES_RANKING =\n  \"payworks/repositories/SET_REPOSITORIES_RANKING\";\nexport const SET_REPOSITORIES_LANGUAGE =\n  \"payworks/repositories/SET_REPOSITORIES_LANGUAGE\";\nexport const CLEAR_ORGANIZATION = \"payworks/repositories/CLEAR_ORGANIZATION\";\n\nexport function loadRepositories(organization) {\n  return {\n    type: LOAD_REPOSITORIES,\n    organization\n  };\n}\n\nexport function setRepositories(repositories) {\n  return {\n    type: SET_REPOSITORIES,\n    repositories\n  };\n}\n\nexport function fetchRepositories(organization) {\n  return dispatch => {\n    dispatch(loadRepositories(organization));\n    return getRepositories(organization)\n      .then(repositories => {\n        dispatch(setRepositories(repositories));\n      })\n      .catch(err => {\n        dispatch(setError(err.message));\n        dispatch(clearOrganization());\n      });\n  };\n}\n\nexport function setRepositoriesPage(page) {\n  return {\n    type: SET_REPOSITORIES_PAGE,\n    page\n  };\n}\n\nexport function setRepositoriesRanking(rankBy) {\n  return {\n    type: SET_REPOSITORIES_RANKING,\n    rankBy\n  };\n}\n\nexport function setRepositoriesLanguage(language) {\n  return {\n    type: SET_REPOSITORIES_LANGUAGE,\n    language\n  };\n}\n\nexport function clearOrganization() {\n  return {\n    type: CLEAR_ORGANIZATION\n  };\n}\n\nconst initialState = {\n  organization: \"\",\n  repositories: [],\n  page: 1,\n  limit: 10,\n  rankBy: \"forks_count\",\n  language: \"all\"\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_REPOSITORIES:\n      return Object.assign({}, state, {\n        organization: action.organization,\n        repositories: []\n      });\n    case SET_REPOSITORIES:\n      return Object.assign({}, state, {\n        repositories: action.repositories,\n        page: 1,\n        rankBy: \"forks_count\",\n        language: \"all\"\n      });\n    case SET_REPOSITORIES_PAGE:\n      return Object.assign({}, state, {\n        page: action.page\n      });\n    case SET_REPOSITORIES_RANKING:\n      return Object.assign({}, state, {\n        rankBy: action.rankBy,\n        page: 1\n      });\n    case SET_REPOSITORIES_LANGUAGE:\n      return Object.assign({}, state, {\n        language: action.language,\n        page: 1\n      });\n    case CLEAR_ORGANIZATION:\n      return Object.assign({}, state, {\n        organization: \"\",\n        page: 1\n      });\n    default:\n      return state;\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setRepositoriesRanking } from \"./../../redux/modules/repositories\";\nimport { Dropdown, Menu, Icon } from \"antd\";\n\nexport class RankBy extends Component {\n  handleMenuClick = e => this.props.setRepositoriesRanking(e.key);\n  renderMenu = () => (\n    <Menu onClick={this.handleMenuClick}>\n      <Menu.Item key=\"stargazers_count\">\n        <Icon type=\"star\" theme=\"filled\" />\n        Rank by star\n      </Menu.Item>\n      <Menu.Item key=\"forks_count\">\n        <Icon type=\"fork\" />\n        Rank by forks\n      </Menu.Item>\n    </Menu>\n  );\n  render = () => {\n    return (\n      <Dropdown.Button\n        overlay={this.renderMenu}\n        icon={\n          <Icon\n            theme={this.props.rankBy === \"forks_count\" ? null : \"filled\"}\n            type={this.props.rankBy === \"forks_count\" ? \"fork\" : \"star\"}\n          />\n        }\n      >\n        Ranked by {this.props.rankBy === \"forks_count\" ? \"Forks\" : \"Stars\"}\n      </Dropdown.Button>\n    );\n  };\n}\n\nconst mapStateToProps = ({ repositories: { rankBy } }) => ({ rankBy });\n\nconst mapDispatchToProps = { setRepositoriesRanking };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RankBy);\n","import { createSelector } from \"reselect\";\n\nexport const getRepositoryPaginationSelector = createSelector(\n  state => state.repositories,\n  data => {\n    const list = data.repositories;\n    const page = data.page;\n    const limit = data.limit;\n    const rankBy = data.rankBy;\n    const language = data.language;\n    const offset = (page - 1) * limit;\n    list.sort((repo1, repo2) => {\n      return repo2[rankBy] - repo1[rankBy];\n    });\n    const processedList =\n      !language || language === \"all\"\n        ? list\n        : list.filter(repository => repository.language === language);\n    const count = processedList.length;\n    return {\n      items: processedList.slice(offset, offset + limit),\n      count,\n      limit,\n      page\n    };\n  }\n);\n\nexport const getRepositoryLanguagesSelector = createSelector(\n  state => state.repositories,\n  data => {\n    const list = data.repositories;\n    const languages = [...new Set(list.map(repository => repository.language))];\n    return languages.filter(Boolean);\n  }\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setRepositoriesLanguage } from \"./../../redux/modules/repositories\";\nimport { getRepositoryLanguagesSelector } from \"./../../redux/modules/selectors\";\nimport { Dropdown, Menu } from \"antd\";\n\nexport class Languages extends Component {\n  handleMenuClick = e => this.props.setRepositoriesLanguage(e.key);\n  renderMenu = () => (\n    <Menu onClick={this.handleMenuClick}>\n      <Menu.Item key=\"all\">All Languages</Menu.Item>\n      {this.props.languages.map(language => (\n        <Menu.Item key={language}> {language} </Menu.Item>\n      ))}\n    </Menu>\n  );\n  render = () => {\n    return (\n      <Dropdown.Button overlay={this.renderMenu}>\n        {this.props.language === \"all\"\n          ? \"All Languages\"\n          : `Language: ${this.props.language}`}\n      </Dropdown.Button>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({\n  languages: getRepositoryLanguagesSelector(state),\n  language: state.repositories.language\n});\n\nconst mapDispatchToProps = { setRepositoriesLanguage };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Languages);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RepositoryListItem } from \"./RepositoryListItem\";\nimport { Paginator } from \"../Paginator\";\nimport RankBy from \"../repositories/RankBy\";\nimport Languages from \"../repositories/Languages\";\nimport { Empty } from \"antd\";\nimport { setRepositoriesPage } from \"./../../redux/modules/repositories\";\nimport { getRepositoryPaginationSelector } from \"./../../redux/modules/selectors\";\n\nexport const RepositoryList = ({\n  items,\n  page,\n  count,\n  limit,\n  setRepositoriesPage\n}) => {\n  if (!items || !items.length) {\n    return <Empty />;\n  }\n  const pageInfo = { page, count, limit, onChange: setRepositoriesPage };\n  return (\n    <>\n      <div className=\"app-github-list-controls\">\n        <Paginator {...pageInfo} />\n        <RankBy />\n        <Languages />\n      </div>\n      <div className=\"app-github-list-list\">\n        {items.map(repository => (\n          <RepositoryListItem key={repository.id} {...{ repository }} />\n        ))}\n      </div>\n    </>\n  );\n};\nconst mapDispatchToProps = { setRepositoriesPage };\n\nconst mapStateToProps = state => getRepositoryPaginationSelector(state);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RepositoryList);\n","import React from \"react\";\nimport { Layout } from \"antd\";\n\nconst Header = ({ children }) => (\n  <Layout.Header className=\"app-github-root-header\">{children}</Layout.Header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { Layout } from \"antd\";\n\nexport default () => (\n  <Layout.Footer className=\"app-github-footer\">\n    {\"Organization github repositories\"}\n  </Layout.Footer>\n);\n","import React from \"react\";\nimport { Layout } from \"antd\";\n\nexport default ({ children }) => (\n  <div className=\"app-github-content\">\n    <Layout.Content className=\"app-github-root-content\">\n      {children}\n    </Layout.Content>\n  </div>\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchRepositories } from \"./../../redux/modules/repositories\";\nimport { Input } from \"antd\";\n\nexport const Search = ({ fetchRepositories }) => (\n  <Input.Search\n    className=\"app-github-filter-search\"\n    placeholder=\"Organization name\"\n    enterButton\n    onSearch={fetchRepositories}\n  />\n);\n\nconst mapDispatchToProps = { fetchRepositories };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Search);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nexport const Organization = ({ organization }) => {\n  return organization ? (\n    <h2 className=\"app-github-content-title\">Organization: {organization}</h2>\n  ) : null;\n};\n\nconst mapStateToProps = ({ repositories: { organization } }) => ({\n  organization\n});\n\nexport default connect(mapStateToProps)(Organization);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Spin } from \"antd\";\n\nexport const LoadingSpinner = ({ loading }) => (\n  <Spin size=\"large\" className=\"centered\" spinning={loading} />\n);\n\nconst mapStateToProps = ({ ui: { loading } }) => ({ loading });\n\nexport default connect(mapStateToProps)(LoadingSpinner);\n","import React from \"react\";\nimport RepositoryList from \"./RepositoryList\";\nimport Header from \"./../layout/Header\";\nimport Footer from \"./../layout/Footer\";\nimport Content from \"./../layout/Content\";\nimport Search from \"./Search\";\nimport Organization from \"./Organization\";\nimport LoadingSpinner from \"./../LoadingSpinner\";\n\nconst Repositories = () => (\n  <>\n    <Header>\n      <Search />\n    </Header>\n    <Content>\n      <LoadingSpinner />\n      <Organization />\n      <RepositoryList />\n    </Content>\n    <Footer />\n  </>\n);\n\nexport default Repositories;\n","import React from \"react\";\n\nexport const Branch = ({ organization, repository }) => {\n  return organization && repository ? (\n    <h2 className=\"app-github-content-title\">\n      Repository: {organization}/{repository}\n    </h2>\n  ) : null;\n};\n","/* eslint-disable react/jsx-no-target-blank */\nimport React from \"react\";\nimport { Card } from \"antd\";\n\nexport const BranchListItem = ({ branch }) => (\n  <Card\n    title={<h3>{branch.name}</h3>}\n    className=\"app-github-list-item app-github-branch-listitem\"\n  >\n    <ul className=\"app-github-details-list\">\n      <li>\n        <dt>Commit</dt>\n        <dd>\n          <a href={branch.commit.url} target=\"_blank\">\n            {branch.commit.sha}\n          </a>\n        </dd>\n      </li>\n    </ul>\n  </Card>\n);\n","import React from \"react\";\nimport { Empty } from \"antd\";\nimport { BranchListItem } from \"./BranchListItem\";\n\nexport const BranchList = ({ branches }) => {\n  if (!branches || !branches.length) {\n    return <Empty />;\n  }\n  return (\n    <div className=\"app-github-list-list\">\n      {branches.map(branch => (\n        <BranchListItem key={branch.name} {...{ branch }} />\n      ))}\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport Header from \"./../layout/Header\";\nimport Footer from \"./../layout/Footer\";\nimport Content from \"./../layout/Content\";\nimport LoadingSpinner from \"./../LoadingSpinner\";\nimport { Branch } from \"./Branch\";\nimport { BranchList } from \"./BranchList\";\nimport { connect } from \"react-redux\";\nimport { fetchBranches } from \"./../../redux/modules/branches\";\nimport { Breadcrumb } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nexport const GoBack = ({ repository, organization }) => (\n  <Breadcrumb>\n    <Breadcrumb.Item>\n      <Link to=\"/\">{organization}</Link>\n    </Breadcrumb.Item>\n    <Breadcrumb.Item>{repository}</Breadcrumb.Item>\n  </Breadcrumb>\n);\n\nexport class Branches extends Component {\n  componentDidMount() {\n    const organization = this.props.match.params.organization;\n    const repository = this.props.match.params.repository;\n    this.props.fetchBranches(organization, repository);\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Content>\n          <LoadingSpinner />\n          <GoBack {...this.props} />\n          <Branch {...this.props} />\n          <BranchList {...this.props} />\n        </Content>\n        <Footer />\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchBranches };\nconst mapStateToProps = ({\n  repositories: { organization },\n  branches: { repository, branches }\n}) => ({ organization, repository, branches });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Branches);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport repositories from \"./repositories\";\nimport branches from \"./branches\";\nimport ui from \"./ui\";\n\nexport default combineReducers({\n  repositories,\n  branches,\n  ui\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport reducers from \"./modules\";\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Repositories from \"./components/repositories\";\nimport Branches from \"./components/branches\";\nimport \"./App.css\";\n\nexport default () => {\n  return (\n    <HashRouter>\n      <Route exact path=\"/\" component={Repositories} />\n      <Route path=\"/:organization/:repository\" component={Branches} />\n    </HashRouter>\n  );\n};\n"],"sourceRoot":""}